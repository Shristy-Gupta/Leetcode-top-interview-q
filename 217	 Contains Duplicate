#include<set>
class Solution {
public:
    bool containsDuplicate(vector<int>& nums) {
        if(nums.size()<=1){
            return false;
        }
        int size=nums.size();
        //1) First method is take set and traverse the elements and add to 
        //the set. If the size of the set is less than the size of actual element then
        // it has duplicates else not complexity O(n) space
        //2) sort the array and then find duplicates O(nlogn) + O(n)--> O(nlogn)
        set <int, greater<int>> s1;
        for(int i=0;i<size;i++){
            s1.insert(nums[i]);
        }
        if(s1.size()==size){
            return false;
        }
        else{
            return true;
        }
    }
};

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* sortedArrayToBSThelper(vector<int>& nums, int lowindex, int highindex){
        if(lowindex>highindex){
            return NULL;
        }
        int midindex=(lowindex+highindex)/2;
        TreeNode* root=new TreeNode(nums[midindex]);
        root->left=sortedArrayToBSThelper(nums,lowindex,midindex-1);
        root->right=sortedArrayToBSThelper(nums,midindex+1,highindex);
        return root;
        
    }
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        if(nums.size()==0){
            return NULL;
        }
       int low=0,high=nums.size()-1;
       return sortedArrayToBSThelper(nums,low,high);
    }
};
